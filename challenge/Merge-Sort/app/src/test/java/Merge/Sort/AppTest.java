/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Merge.Sort;

import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.Arrays;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {



    @Test
    public void mergeSortTester() {
        mergesort merge = new mergesort();

        ArrayList<Integer> notSort = new ArrayList<Integer>();
        notSort.add(8);
        notSort.add(4);
        notSort.add(23);
        notSort.add(42);
        notSort.add(16);
        notSort.add(15);


        ArrayList actual = merge.mergeSort(notSort);

        ArrayList<Integer> expected = new ArrayList<Integer>();
        expected.add(4);
        expected.add(8);
        expected.add(15);
        expected.add(16);
        expected.add(23);
        expected.add(42);
        assertArrayEquals(expected.toArray(), actual.toArray());
    }

    @Test
    public void ReverseSorted() {
        mergesort merge = new mergesort();

        ArrayList<Integer> notSort = new ArrayList<Integer>();
        notSort.add(20);
        notSort.add(18);
        notSort.add(12);
        notSort.add(8);
        notSort.add(5);
        notSort.add(-2);


        ArrayList actual = merge.mergeSort(notSort);

        ArrayList<Integer> expected = new ArrayList<Integer>();
        expected.add(-2);
        expected.add(5);
        expected.add(8);
        expected.add(12);
        expected.add(18);
        expected.add(20);
        assertArrayEquals(expected.toArray(), actual.toArray());
    }


    @Test
    public void FewUniques() {
        mergesort merge = new mergesort();
        ArrayList<Integer> notSort = new ArrayList<Integer>();
        notSort.add(5);
        notSort.add(12);
        notSort.add(7);
        notSort.add(5);
        notSort.add(5);
        notSort.add(7);


        ArrayList actual = merge.mergeSort(notSort);

        ArrayList<Integer> expected = new ArrayList<Integer>();
        expected.add(5);
        expected.add(5);
        expected.add(5);
        expected.add(7);
        expected.add(7);
        expected.add(12);
        assertArrayEquals(expected.toArray(), actual.toArray());
    }

    @Test
    public void NearlySorted() {
        mergesort merge = new mergesort();
        ArrayList<Integer> notSort = new ArrayList<Integer>();
        notSort.add(2);
        notSort.add(3);
        notSort.add(5);
        notSort.add(7);
        notSort.add(13);
        notSort.add(11);


        ArrayList actual = merge.mergeSort(notSort);

        ArrayList<Integer> expected = new ArrayList<Integer>();
        expected.add(2);
        expected.add(3);
        expected.add(5);
        expected.add(7);
        expected.add(11);
        expected.add(13);
        assertArrayEquals(expected.toArray(), actual.toArray());
    }
}